<UUTState><int>1</int><string>c:\EMC\ProductPackages\992-920-439\Scripts\Rockies_FC.xml</string><UnitStatus>Testing</UnitStatus><TestExecStatus>Running</TestExecStatus><TestExecStatus>Running</TestExecStatus><SequencerUutInformation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><SequenceFileName>Rockies_FC.xml</SequenceFileName><StepTotal>194</StepTotal><StepCurrent>36</StepCurrent><StepName>Aux_Enclosure_Diag</StepName><EstCompletionTime>2015-11-01T17:54:07.21875+00:00</EstCompletionTime></SequencerUutInformation><ArrayOfSequencerStepStatus xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><SequencerStepStatus><Index>1</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetupForSync</Name><Duration>00:00:29</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:16:53.78125+00:00</StartTime><EndTime>2015-10-30T14:17:22.78125+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>2</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>InitTestLocation</Name><Duration>00:00:10.5156250</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:17:23.109375+00:00</StartTime><EndTime>2015-10-30T14:17:33.625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>3</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>RockiesLogin_Msg</Name><Duration>00:06:40.8437500</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:17:34.03125+00:00</StartTime><EndTime>2015-10-30T14:24:14.875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>4</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckVaultPack_MSG</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>5</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetACE</Name><Duration>00:00:42.6718750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:24:15.21875+00:00</StartTime><EndTime>2015-10-30T14:24:57.890625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>6</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>ParseACE</Name><Duration>00:00:11.6093750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:24:58.265625+00:00</StartTime><EndTime>2015-10-30T14:25:09.875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>7</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SPSOnMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>8</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SendTLA_GetGenealogy</Name><Duration>00:00:20.4375000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:25:10.21875+00:00</StartTime><EndTime>2015-10-30T14:25:30.65625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>9</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>ParseGenealogy_UnNested</Name><Duration>00:00:17.5468750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:25:31.0625+00:00</StartTime><EndTime>2015-10-30T14:25:48.609375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>10</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>LoginUpdate</Name><Duration>00:01:01.2500000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:25:49.3125+00:00</StartTime><EndTime>2015-10-30T14:26:50.5625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>11</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>AceGeneConfigCheck</Name><Duration>00:00:14.5468750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:26:51.078125+00:00</StartTime><EndTime>2015-10-30T14:27:05.625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>12</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>x8CableMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>13</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ConfigPower</Name><Duration>00:00:36.0468750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:27:06.125+00:00</StartTime><EndTime>2015-10-30T14:27:42.171875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>14</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>RockiesInitVars</Name><Duration>00:00:57.0468750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:27:42.75+00:00</StartTime><EndTime>2015-10-30T14:28:39.796875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>15</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetUutIdConfigs</Name><Duration>00:00:13.6406250</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:28:40.21875+00:00</StartTime><EndTime>2015-10-30T14:28:53.859375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>16</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ChkUBSEEnablers</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>17</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOffPriCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>18</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOffSecCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>19</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ResetPwrCyclVar_RokDiags</Name><Duration>00:00:17.1875000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:28:54.328125+00:00</StartTime><EndTime>2015-10-30T14:29:11.515625+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>20</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>MonPwrUp_ClrDMI_PreDiags_115200</Name><Duration>00:15:38.5937500</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:29:12.09375+00:00</StartTime><EndTime>2015-10-30T14:44:50.6875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>21</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetMacAddresses</Name><Duration>00:00:28.1562500</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:44:51.15625+00:00</StartTime><EndTime>2015-10-30T14:45:19.3125+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>22</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ResumeWrite</Name><Duration>00:01:04.6093750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:45:19.859375+00:00</StartTime><EndTime>2015-10-30T14:46:24.46875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>23</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SyncCopyICAPlatty</Name><Duration>00:01:13.8593750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:46:24.828125+00:00</StartTime><EndTime>2015-10-30T14:47:38.6875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>24</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Copy.ICA.Platty.Conf</Name><Duration>00:01:25.3750000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:47:39.484375+00:00</StartTime><EndTime>2015-10-30T14:49:04.859375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>25</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SetEnclSysType_Post</Name><Duration>00:01:28.2500000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:49:05.21875+00:00</StartTime><EndTime>2015-10-30T14:50:33.46875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>26</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PlatypusICARegisterMAC</Name><Duration>00:00:43.8437500</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:50:33.875+00:00</StartTime><EndTime>2015-10-30T14:51:17.71875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>27</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ResetPwrCyclVar_RokDiags</Name><Duration>00:00:16.2656250</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:51:18.078125+00:00</StartTime><EndTime>2015-10-30T14:51:34.34375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>28</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>MonPwrUp_Platypus_115200</Name><Duration>00:16:06.0312500</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T14:51:34.703125+00:00</StartTime><EndTime>2015-10-30T15:07:40.734375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>29</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DAECountVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>30</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DAEVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>31</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DAE_Codeload</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>32</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Codeload</Name><Duration>00:10:47.6093750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T15:07:41.359375+00:00</StartTime><EndTime>2015-10-30T15:18:28.96875+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>33</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DriveFirmwareUpdate</Name><Duration>00:03:44.2500000</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T15:18:29.34375+00:00</StartTime><EndTime>2015-10-30T15:22:13.59375+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>34</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FullDiscovery</Name><Duration>00:07:50.1406250</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T15:22:13.984375+00:00</StartTime><EndTime>2015-10-30T15:30:04.125+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>35</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CreateJustOneHardwareXML</Name><Duration>00:00:17.1093750</Duration><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Complete</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T15:30:04.59375+00:00</StartTime><EndTime>2015-10-30T15:30:21.703125+00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>36</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Aux_Enclosure_Diag</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><Text>Running</Text><BackgroundColor /><ForegroundColor /></Status><Iteration>1</Iteration><StartTime>2015-10-30T15:30:22.0625+00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>37</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PowerCableSwap</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>38</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Argonaut_Enclosure_Diag</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>39</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SystemBEVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>40</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FEOpticalCableVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>41</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>NestVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>42</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ParseDiscovery</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>43</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetGenealogy_Nested</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>44</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ParseGenealogy_Nested</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>45</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GeneDiscConfigCheck_Nested</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>46</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PstDscvr_AceGeneCfgChk</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>47</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>AceDiscConfigCheck</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>48</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>GoodsIssueMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>49</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Check4OpenIncid_PostDiags</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>50</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ReturnEnclosureIDs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>51</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SoftResetFromPlatypus</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>52</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PlatypusICADeregisterMAC</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>53</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FlshFwRevChk_OsRevAB</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>54</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>DwnLdTftp_AllOsFwRevsAB</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>55</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>UpdateDMEFrmWrBiosAB</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>56</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>UpdateDMEFrmWrPostAB</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>57</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>UpdateDMEFrmWrFwBundleAB</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>58</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetSPGmtTimePost</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>59</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetNaviSrvcUUTIPs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>60</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SyncICA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>61</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Copy.ICA.ICA.Conf</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>62</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ICA_RestartPoint</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>63</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>ValidateImage</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>64</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>ResetPwrCyclVar_PreICA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>65</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>MonPwrUp_PreICA_115200</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>66</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>InitLAN</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>67</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrDwnDMEsPreICA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>68</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>ICA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>69</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOff</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>70</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>LoadVaultPack_MSG</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>71</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrCycleBE_Flare</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>72</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CLB_LetOSBootUp</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>73</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CLB_ArbSetTstIPs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>74</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CLB_SetSysTstIPs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>75</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CLB_ReleaseIPArb</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>76</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CLB_IpSetCompSync</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>77</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Wait4FlareGetAgent</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>78</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckAgentA_Initial</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>79</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CheckAgentB_Initial</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>80</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SPSAReady</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>81</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>x8PortPersistChk</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>82</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetResumeA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>83</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetCrusA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>84</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>WG_SetupScript</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>85</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>WG_RaidVerify</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>86</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SPSAReady_1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>87</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ChkWrtCacheEnabled</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>88</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SaveSOData</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>89</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetFELogPorts</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>90</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VerifyFASTVP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>91</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>NDUBlockEnabler</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>92</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>NDUFileOE</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>93</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>NDUFileEnabler</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>94</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckLogOneA1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>95</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckLogOneB1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>96</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>GetHostAgentFiles1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>97</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckLogClearAB_Final</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>98</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetCBEncryption</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>99</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ThorBinding</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>100</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VNXFSetup</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>101</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ChkHostAgentBlockEOT</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>102</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>BackGndDisable</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>103</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ResetIP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>104</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>FileVarsInit_Initial</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>105</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>EnableAA</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>106</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FILE_WIRING_MSG</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>107</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FileRestartPointPrimary</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>108</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffPriCS_PreFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>109</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffSecCS_PreFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>110</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>FileVarsInit_Retry</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>111</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffPriCSDMEs_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>112</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffSecCS_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>113</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SC.Off_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>114</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SG.Enable_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>115</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>UninstlFileEna_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>116</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>AutoAttachEna_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>117</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>NDUFileOE_RestartPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>118</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffPriCSDMEs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>119</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SetPrimary</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>120</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOnPriCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>121</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOnSecCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>122</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PriSecLoadMessPNP</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>123</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffPriCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>124</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffSecCS</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>125</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PNPInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>126</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>VerifyAADisabled</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>127</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>FibreCableChecks</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>128</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SetUBSEEnablers</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>129</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PrimaryEnclosureStatus</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>130</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>EncStatLoop</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>131</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PrimaryProbeSys</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>132</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PrimaryCheckCable</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>133</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PrimaryDmiDecode</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>134</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SecondaryEnclosureStatus</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>135</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>SecondaryProbeSys</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>136</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SecondaryCheckCable</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>137</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SecondaryDmiDecode</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>138</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>StopEncLoop</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>139</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CsMgmtIfup</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>140</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SaveNasInfo</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>141</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetCBEncryptionUnified</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>142</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLmCopyToolsFile</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>143</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLmMgmtPortIfDown</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>144</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLmReconnectCableMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>145</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>DLmRemCableCheck_Sec</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>146</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>DLmInitSetup</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>147</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLmSetupScript</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>148</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLmInitVTEC</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>149</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLm4OneVTECableMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>150</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLm4TwoVTECableMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>151</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE1PwrMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>152</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE1DLm4MonitorPwrUp</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>153</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE1CopyFiles</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>154</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE1DLm4Config</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>155</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CheckFw1GSw1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>156</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>CfgFileDLm4Load1GSw1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>157</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SetCfg1GSw1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>158</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE2PwrMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>159</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>VTE2DLm4SwInit</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>160</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLm4ChangeFcId</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>161</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLm4HaStatus</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>162</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>DLm4FinalTest</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>163</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>DLm4ShutdownVTEs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>164</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOff1GSw1</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>165</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ChkHostAgentUnifEOT</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>166</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>NasHalt</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>167</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>BackGndDisable</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>168</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOffPriCS_AfterFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>169</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOffSecCS_AfterFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>170</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOff_AfterFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>171</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>GetGenealogy_SOData</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>172</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>SaveSODataGene</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>173</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrOffPriCSDMEs_AfterFileInstall</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>174</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>CSPwrReCblMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>175</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>TurnUUTBPwrOff</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>176</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>RstPwrCyclVar_CS0Chk</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>177</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrBChkCS0on1off</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>178</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrDwnBSide</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>179</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>TurnUUTAPwrOff</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>180</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>RstPwrCyclVar_CS1Chk</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>181</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrAChkCS1on0off</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>182</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>PwrDwnASide</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>183</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PrintCSLabel</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>184</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetCSLabelMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>185</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PrintLoosePairLabel</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>186</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>GetLoosePairLabelMsg</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>187</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ResetPwrCyclVar_EndOfTest</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>188</Index><RestartPoint>false</RestartPoint><RestartEnabled>false</RestartEnabled><Name>MonPwrUpAllENCL_ClrDMI_EndOfTest</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>189</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>PwrOff</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>190</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>Check4OpenIncid_Final</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>191</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ClnUpHostAgntFilesEOT</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>192</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ClearSyncData</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>193</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>ClearUutIdConfigs</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus><SequencerStepStatus><Index>194</Index><RestartPoint>true</RestartPoint><RestartEnabled>true</RestartEnabled><Name>FCMAT_Rockies_Rev_50</Name><Duration /><Status><FontBold>false</FontBold><FontItalic>false</FontItalic><BackgroundColor /><ForegroundColor /></Status><Iteration>0</Iteration><StartTime>0001-01-01T00:00:00</StartTime><EndTime>0001-01-01T00:00:00</EndTime></SequencerStepStatus></ArrayOfSequencerStepStatus><RunContext><List><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>1</int>
  <int>1</int>
  <long>290000000</long>
  <dateTime>2015-10-30T14:16:53.78125+00:00</dateTime>
  <dateTime>2015-10-30T14:17:22.78125+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="SetupForSync">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:05:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\Sync.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.Sync.mm) (-var0:)(SET) (-uut:)(UUT)($uutnum) (-cap:)(Running Sync Command for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>2</int>
  <int>1</int>
  <long>105156250</long>
  <dateTime>2015-10-30T14:17:23.109375+00:00</dateTime>
  <dateTime>2015-10-30T14:17:33.625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="InitTestLocation">
    <EstTime>00:00:30</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetTestLoc.mm) (-var0:)($JO_UutWorkingDirectory)(\bin\ape.ini) (-var1:)(LOGIN) (-var2:)($login_location) (-var3:)(Testloc) (-var4:)($JO_UutWorkingDirectory) (-FILE:)($dir_datalogs)($uutnum)(\InitTestLoc.txt) (-cap:)(Determining test location UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>3</int>
  <int>1</int>
  <long>4008437500</long>
  <dateTime>2015-10-30T14:17:34.03125+00:00</dateTime>
  <dateTime>2015-10-30T14:24:14.875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="RockiesLogin_Msg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\RockiesLogin_Msg.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\RockiesLogin.mm) (-uut:)($uutnum) (-var0:)(FC) (-cap:Rockies FCMAT Login Scan) (-var1:)($TestLoc) (-var2:)(ROCKIES) (-var5:)($jo_so_number)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>4</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckVaultPack_MSG">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Ensure the Vault Drives are NOT SEATED in the first four slots: 0 1 2 3.') (-Btn1:)(Vault Unseated/Pass) (-Btn2:)(Cancel/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\CheckVaultPack.txt) (-Style:Info) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>5</int>
  <int>1</int>
  <long>426718750</long>
  <dateTime>2015-10-30T14:24:15.21875+00:00</dateTime>
  <dateTime>2015-10-30T14:24:57.890625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="GetACE">
    <EstTime>00:02:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-uut:)($uutnum) (-file:)($dir_datalogs)($uutnum)(\GetACE.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetACE.mm)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>6</int>
  <int>1</int>
  <long>116093750</long>
  <dateTime>2015-10-30T14:24:58.265625+00:00</dateTime>
  <dateTime>2015-10-30T14:25:09.875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ParseACE">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:15:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ParseACE.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.FC.SystemParser.mm) (-var0:)(ACE) (-uut:)(UUT)($uutnum) (-cap:)(Parsing the ACE file for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>7</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SPSOnMsg">
    <EstTime>00:10:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Please Turn on SPSs.') (-Btn1:)(SPSs are ON/Pass) (-Btn2:)(SPSs Failed/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\SPSOnMsg.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>8</int>
  <int>1</int>
  <long>204375000</long>
  <dateTime>2015-10-30T14:25:10.21875+00:00</dateTime>
  <dateTime>2015-10-30T14:25:30.65625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="SendTLA_GetGenealogy">
    <EstTime>00:02:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="SendTlaModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) (-serialNumber:)($SysTLA) (-partNumber:)($TLAPN) (-slot:0_0_0_0) (-type:PRODUCT DOGTAG)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-uut:)($uutnum) (-file:)($dir_datalogs)($uutnum)(\GetGenealogy_UnNested.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetGenealogy.mm) (-var0:)($SysTLA)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>9</int>
  <int>1</int>
  <long>175468750</long>
  <dateTime>2015-10-30T14:25:31.0625+00:00</dateTime>
  <dateTime>2015-10-30T14:25:48.609375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ParseGenealogy_UnNested">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:15:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ParseGenealogy_UnNested.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.FC.SystemParser.mm) (-var0:)(GENEALOGY) (-uut:)(UUT)($uutnum) (-cap:)(Parsing the GENEALOGY file for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>10</int>
  <int>1</int>
  <long>612500000</long>
  <dateTime>2015-10-30T14:25:49.3125+00:00</dateTime>
  <dateTime>2015-10-30T14:26:50.5625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="LoginUpdate">
    <EstTime>00:00:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\UpdateLoginInfo.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.AutoLoginDataCollect.mm) (-var0:)(ROCKIESSO) (-uut:)($uutnum) (-cap:)(Updating Login Info UUT)($uutnum) (-var0:)($TestLoc)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>11</int>
  <int>1</int>
  <long>145468750</long>
  <dateTime>2015-10-30T14:26:51.078125+00:00</dateTime>
  <dateTime>2015-10-30T14:27:05.625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="AceGeneConfigCheck">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckConfig.mm) (-CAP:)([UUT)($uutnum)(] Checking Configuration Ace vs Genealogy...) (-FILE:)($dir_datalogs)($uutnum)(\CheckConfigGeneAce.txt) (-var0:GeneAce) (-var1:)($psnt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>12</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="x8CableMsg">
    <EstTime>00:10:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Ensure that all Moonlight SLICs are cabled with x8 cables so they are persisted correctly.') (-Btn1:)(Cabled x8/Pass) (-Btn2:)(SPSs Failed/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\x8CableMsg.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>13</int>
  <int>1</int>
  <long>360468750</long>
  <dateTime>2015-10-30T14:27:06.125+00:00</dateTime>
  <dateTime>2015-10-30T14:27:42.171875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ConfigPower">
    <EstTime>00:00:30</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\PowerConfig.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerConfig.mm) (-uut:)($uutnum) (-VAR0:)(UUT)($uutnum) (-var1:)(Register) (-cap:)(UUT)($uutnum)( Power Config)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>14</int>
  <int>1</int>
  <long>570468750</long>
  <dateTime>2015-10-30T14:27:42.75+00:00</dateTime>
  <dateTime>2015-10-30T14:28:39.796875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="RockiesInitVars">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:05:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.ModelingVars.mm) (-CAP:)(Initializing UUT)($uutnum)( Unified Variables) (-var0:)(UUT)($uutnum) (-var1:)($TPC_Defcon_Level) (-var2:)(ICAEnablers) (-FILE:)($dir_datalogs)($uutnum)(\RockiesInitVars.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>15</int>
  <int>1</int>
  <long>136406250</long>
  <dateTime>2015-10-30T14:28:40.21875+00:00</dateTime>
  <dateTime>2015-10-30T14:28:53.859375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="SetUutIdConfigs">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\SetUutIdConfigs.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetUutIdConfigs.mm) (-uut:)($uutnum) (-cap:Set UUT Reg Settings)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>16</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ChkUBSEEnablers">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ChkUBSEEnablers.txt) (-uut:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ChkNASUBSEEnablers.mm) (-cap:)(UUT)($uutnum)( Checking for FILE UBSE Enablers)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>17</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrPriCS.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>18</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffSecCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrPriCS.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>19</int>
  <int>1</int>
  <long>171875000</long>
  <dateTime>2015-10-30T14:28:54.328125+00:00</dateTime>
  <dateTime>2015-10-30T14:29:11.515625+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ResetPwrCyclVar_RokDiags">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_RokDiags.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>20</int>
  <int>1</int>
  <long>9385937500</long>
  <dateTime>2015-10-30T14:29:12.09375+00:00</dateTime>
  <dateTime>2015-10-30T14:44:50.6875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="MonPwrUp_ClrDMI_PreDiags_115200">
    <EstTime>00:40:00</EstTime>
    <TimeOut>00:59:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOn_PreDiags115200.txt) (-var0:)(UUT)($uutnum) (-var1:Boot) (-var2:AllXpeChas) (-var5:Initial)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPA) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1A_Initial.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPB) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1B_Initial.txt) (-saveraw)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1A_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1B_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2A_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2B_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3A_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3B_Initial.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4A_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4B_PreDiags115200.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>21</int>
  <int>1</int>
  <long>281562500</long>
  <dateTime>2015-10-30T14:44:51.15625+00:00</dateTime>
  <dateTime>2015-10-30T14:45:19.3125+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="GetMacAddresses">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:AUX) (-var1:)(A) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressBE1A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:AUX) (-var1:)(B) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressBE1B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(A) (-var2:DME0) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME1A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(B) (-var2:DME0) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME1B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(A) (-var2:DME1) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME2A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(B) (-var2:DME1) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME2B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(A) (-var2:DME2) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME3A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(B) (-var2:DME2) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME3B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(A) (-var2:DME3) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME4A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetMACAddx.mm) (-var0:DME) (-var1:)(B) (-var2:DME3) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\GetMacAddressDME4B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>22</int>
  <int>1</int>
  <long>646093750</long>
  <dateTime>2015-10-30T14:45:19.859375+00:00</dateTime>
  <dateTime>2015-10-30T14:46:24.46875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ResumeWrite">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:3) (-var3:AUX) (-var5:WriteResume) (-var6:A) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)( BE1 SPA Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteBE1A.txt)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPB) (-var1:)(E3) (-var2:3) (-var3:AUX) (-var5:WriteResume) (-var6:B) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)( BE1 SPB Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteBE1B.txt)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:3) (-var3:DME) (-var5:WriteResume) (-var6:A) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME1 SPA Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPB) (-var1:)(E3) (-var2:3) (-var3:DME) (-var5:WriteResume) (-var6:B) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME1 SPB Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:4) (-var3:DME) (-var5:WriteResume) (-var6:A) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME2 SPA Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPB) (-var1:)(E3) (-var2:4) (-var3:DME) (-var5:WriteResume) (-var6:B) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME2 SPB Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:5) (-var3:DME) (-var5:WriteResume) (-var6:A) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME3 SPA Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPB) (-var1:)(E3) (-var2:5) (-var3:DME) (-var5:WriteResume) (-var6:B) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME3 SPB Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:6) (-var3:DME) (-var5:WriteResume) (-var6:A) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME4 SPA Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.ResumeWrite.mm) (-var0:)(SPB) (-var1:)(E3) (-var2:6) (-var3:DME) (-var5:WriteResume) (-var6:B) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( DME4 SPB Resume Write) (-FILE:)($dir_datalogs)($uutnum)(\ResumeWriteDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>23</int>
  <int>1</int>
  <long>738593750</long>
  <dateTime>2015-10-30T14:46:24.828125+00:00</dateTime>
  <dateTime>2015-10-30T14:47:38.6875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="SyncCopyICAPlatty">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\Sync.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.Sync.mm) (-var0:)(PLT) (-uut:)(UUT)($uutnum) (-cap:)(Running Sync Command for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>24</int>
  <int>1</int>
  <long>853750000</long>
  <dateTime>2015-10-30T14:47:39.484375+00:00</dateTime>
  <dateTime>2015-10-30T14:49:04.859375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="Copy.ICA.Platty.Conf">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.CopyICA.ConfFile.mm) (-VAR0:)(PLATTY) (-CAP:)(Retrieving ICA.Conf Plattypus File UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Copy.ICA.Platty.Conf.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>25</int>
  <int>1</int>
  <long>882500000</long>
  <dateTime>2015-10-30T14:49:05.21875+00:00</dateTime>
  <dateTime>2015-10-30T14:50:33.46875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="SetEnclSysType_Post">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-baud:115200) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.SetE3Mode.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:)(AUX) (-var3:)($AuxChassisID) (-cap:)(Set E3 Mode UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Rc.SetE3ModeAuxA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-baud:9600) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.SetE3Mode.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:)(DME) (-var3:)(3) (-cap:)(Set E3 Mode UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Rc.SetE3ModeBE0A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-baud:9600) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.SetE3Mode.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:)(DME) (-var3:)(4) (-cap:)(Set E3 Mode UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Rc.SetE3ModeBE1A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-baud:9600) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.SetE3Mode.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:)(DME) (-var3:)(5) (-cap:)(Set E3 Mode UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Rc.SetE3ModeBE2A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-baud:9600) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.SetE3Mode.mm) (-var0:)(SPA) (-var1:)(E3) (-var2:)(DME) (-var3:)(6) (-cap:)(Set E3 Mode UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\Rc.SetE3ModeBE3A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>26</int>
  <int>1</int>
  <long>438437500</long>
  <dateTime>2015-10-30T14:50:33.875+00:00</dateTime>
  <dateTime>2015-10-30T14:51:17.71875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="PlatypusICARegisterMAC">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(AUX_A) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationAuxA.txt) (-cap:)(Registering Aux A MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(AUX_B) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationAuxB.txt) (-cap:)(Registering Aux B MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME0_A) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME0A.txt) (-cap:)(Registering DME0 A MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME0_B) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME0B.txt) (-cap:)(Registering DME0 B MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME1_A) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME1A.txt) (-cap:)(Registering DME1 A MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME1_B) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME1B.txt) (-cap:)(Registering DME1 B MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME2_A) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistratioDME2A.txt) (-cap:)(Registering DME2 A MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME2_B) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME2B.txt) (-cap:)(Registering DME2 B MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME3_A) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME3A.txt) (-cap:)(Registering DME3 A MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME3_B) (-VAR1:)(REGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME3B.txt) (-cap:)(Registering DME3 B MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>27</int>
  <int>1</int>
  <long>162656250</long>
  <dateTime>2015-10-30T14:51:18.078125+00:00</dateTime>
  <dateTime>2015-10-30T14:51:34.34375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="ResetPwrCyclVar_RokDiags">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_RokDiags.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>28</int>
  <int>1</int>
  <long>9660312500</long>
  <dateTime>2015-10-30T14:51:34.703125+00:00</dateTime>
  <dateTime>2015-10-30T15:07:40.734375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="MonPwrUp_Platypus_115200">
    <EstTime>00:40:00</EstTime>
    <TimeOut>00:59:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOn_PreDiags.txt) (-var0:)(UUT)($uutnum) (-var1:Boot) (-var2:AllXpeChas) (-var5:Initial)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(PLATYPUS) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor Platypus PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1A_Platypus.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(PLATYPUS) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor Platypus PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1B_Platypus.txt) (-saveraw)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1A_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1B_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2A_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2B_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3A_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3B_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4A_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(PLATYPUS) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4B_Platypus.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>29</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DAECountVerify">
    <EstTime>01:00:00</EstTime>
    <TimeOut>12:10:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname DAECountVerification )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>30</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DAEVerify">
    <EstTime>01:00:00</EstTime>
    <TimeOut>12:10:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname DAEVerify )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>31</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DAE_Codeload">
    <EstTime>01:00:00</EstTime>
    <TimeOut>12:10:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname DAE_Codeload )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>32</int>
  <int>1</int>
  <long>6476093750</long>
  <dateTime>2015-10-30T15:07:41.359375+00:00</dateTime>
  <dateTime>2015-10-30T15:18:28.96875+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="Codeload">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname Codeload )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>33</int>
  <int>1</int>
  <long>2242500000</long>
  <dateTime>2015-10-30T15:18:29.34375+00:00</dateTime>
  <dateTime>2015-10-30T15:22:13.59375+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="DriveFirmwareUpdate">
    <EstTime>01:00:00</EstTime>
    <TimeOut>12:10:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname DriveFirmwareUpdate )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>34</int>
  <int>1</int>
  <long>4701406250</long>
  <dateTime>2015-10-30T15:22:13.984375+00:00</dateTime>
  <dateTime>2015-10-30T15:30:04.125+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="FullDiscovery">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname FullDiscovery )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>35</int>
  <int>1</int>
  <long>171093750</long>
  <dateTime>2015-10-30T15:30:04.59375+00:00</dateTime>
  <dateTime>2015-10-30T15:30:21.703125+00:00</dateTime>
  <TestExecStatus>Finished</TestExecStatus>
  <TestStep Name="CreateJustOneHardwareXML">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="HardwareNestingModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -autonest)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>36</int>
  <int>1</int>
  <long>-9223372036854775808</long>
  <dateTime>2015-10-30T15:30:22.0625+00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Running</TestExecStatus>
  <TestStep Name="Aux_Enclosure_Diag">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname )($GATEModel)(_Enclosure_Diag )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>37</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PowerCableSwap">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname PowerCableSwap )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>38</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="Argonaut_Enclosure_Diag">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname Argonaut_Enclosure_Diag )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>39</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SystemBEVerify">
    <EstTime>01:00:00</EstTime>
    <TimeOut>20:10:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname SystemBEVerify )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>40</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FEOpticalCableVerify">
    <EstTime>01:00:00</EstTime>
    <TimeOut>05:00:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname FEOpticalCableVerify )( -pluginfilename )($pluginfilename)( -sequencefile )($sequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>41</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NestVerify">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="AutonestValidationModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-uutNum:)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>42</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ParseDiscovery">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:20:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ParseDiscovery.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.FC.SystemParser.mm) (-var0:)(DISCOVERY) (-uut:)(UUT)($uutnum) (-cap:)(Parsing the DISCOVERY file for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>43</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetGenealogy_Nested">
    <EstTime>00:02:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-uut:)($uutnum) (-file:)($dir_datalogs)($uutnum)(\GetGenealogy_Nested_SNT.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetGenealogy.mm) (-var0:)($SysTLA)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>44</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ParseGenealogy_Nested">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:15:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ParseGenealogy_Nested.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.FC.SystemParser.mm) (-var0:)(GENEALOGY) (-uut:)(UUT)($uutnum) (-cap:)(Parsing the GENEALOGY file for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>45</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GeneDiscConfigCheck_Nested">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckConfig.mm) (-CAP:)([UUT)($uutnum)(] Checking Configuration Ace vs Genealogy...) (-FILE:)($dir_datalogs)($uutnum)(\GeneDiscConfigCheck_SNT.txt) (-var0:GeneDisc) (-var1:)($psnt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>46</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PstDscvr_AceGeneCfgChk">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckConfig.mm) (-CAP:)([UUT)($uutnum)(] Checking Configuration Ace vs Genealogy...) (-FILE:)($dir_datalogs)($uutnum)(\CheckConfigGeneAce.txt) (-var0:GeneAce) (-var1:)($psnt) (-var2:NESTED)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>47</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="AceDiscConfigCheck">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckConfig.mm) (-CAP:)([UUT)($uutnum)(] Checking Configuration Ace vs Discovery...) (-FILE:)($dir_datalogs)($uutnum)(\CheckConfigAceDisc.txt) (-var0:ACEDisc) (-var1:)($psnt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>48</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GoodsIssueMsg">
    <EstTime>00:05:30</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="Multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GoodsIssueMsg.mm) (-FILE:)($dir_datalogs)($uutnum)(\GoodsIssueMsg.txt) (-cap:)(Perform Goods Issued Message)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>49</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="Check4OpenIncid_PostDiags">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="CheckOpenIssuesModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) (-checkIL:)(true)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>50</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ReturnEnclosureIDs">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="GateTestModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\diagtestapps)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) ( -uut )($uutnum)( -testname )($ReturnEnclIDVar)( -pluginfilename )($pluginfilename)( -sequencefile )($gstasequencefilename) (-disableseriallogging)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>51</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SoftResetFromPlatypus">
    <EstTime>00:40:00</EstTime>
    <TimeOut>00:59:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPA) (-var3:)(MFG2CLAR) (-var5:)(PLATTYSOFTRESET) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusBE1A.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPB) (-var3:)(MFG2CLAR) (-var5:)(PLATTYSOFTRESET) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusBE1B.txt) (-saveraw)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME1A.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME1B.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME2A.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME2B.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME3A.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME3B.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPA) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME4A.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:ClrDMI) (-var2:)(SPB) (-var5:)(PLATTYSOFTRESET) (-baud )($DMEBaudRt) ( -debug:noagdc ) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\SoftResetFromPlatypusDME4B.txt) (-baud )($DMEBaudRt) (-saveraw)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>52</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PlatypusICADeregisterMAC">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(AUX_A) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationAuxA.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(AUX_B) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationAuxB.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME0_A) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME0A.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME0_B) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME0B.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME1_A) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME1A.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME1_B) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME1B.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME2_A) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME2A.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME2_B) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME2B.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME3_A) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME3A.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) (-APP:cmd.exe) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rc.PlatypusIcaRegistration.mm) (-VAR0:)(DME3_B) (-VAR1:)(DEREGISTER) (-FILE:)($dir_datalogs)($uutnum)(\Rc.PlatypusIcaRegistrationDME3B.txt) (-cap:)(Registering MAC to ICA Platypus PXE Dir)($uutnum)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>53</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FlshFwRevChk_OsRevAB">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($coma1) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPA) (-var1:)(AUX_OsRev) (-var2:AUX) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev AUX SPA) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpABEE1A.txt)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($comb1) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPB) (-var1:)(AUX_OsRev) (-var2:AUX) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev AUX SPB) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpABEE1B.txt)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPA) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPB) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPA) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPB) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPA) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPB) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPA) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.FlshFwRevChk.mm) (-var0:)(SPB) (-var1:)(DME_OsRev) (-var2:DME) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(CheckFWRevs Os Rev DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\FlshFwRevChkSpADME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>54</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DwnLdTftp_AllOsFwRevsAB">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:50:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($coma1) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPA) (-var2:)(AUX_OsRev) (-var3:)(Bios) (-var4:AUX) (-var5:ALL) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs AUX SPA) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsBEE1A.txt)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($comb1) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPB) (-var2:)(AUX_OsRev) (-var3:)(Bios) (-var4:AUX) (-var5:ALL) (-baud )($AuxBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs AUX SPB) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsBEE1B.txt)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPA) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPB) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPA) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPB) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPA) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPB) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPA) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Roc.DwnLdTftp.mm) (-var1:)(SPB) (-var2:)(DME_OsRev) (-var3:)(Bios) (-var4:DME) (-var5:ALL) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(DownLd All Os Fw Revs DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\DownloadAllOsFwRevsDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>55</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="UpdateDMEFrmWrBiosAB">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Bios) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Bios DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrBiosDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>56</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="UpdateDMEFrmWrPostAB">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(Post) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr Post DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrPostDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>57</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="UpdateDMEFrmWrFwBundleAB">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:40:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\\Unf.UpdateFrmWr.mm) (-var0:)(FwBun) (-var1:DME) (-var2:SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(UpdateFrmWr FwBun DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\UpdateFrmWrFwBunDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>58</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetSPGmtTimePost">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(AUX) (-var2:)(SPA) (-baud )($AuxBaudRt) (-cap:)(Setting SPA Time UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostAUXA.txt) (-saveraw)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(AUX) (-var2:)(SPB) (-baud )($AuxBaudRt) (-cap:)(Setting SPB Time UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostAUXB.txt) (-saveraw)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1A) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME0 SPA) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME1B) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME0 SPB) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2A) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME2B) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3A) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME3B) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4A) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComDME4B) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetSPTimePost.mm) (-var0:)(GMT) (-var1:)(DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)(Setting SPB Time DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\SetSPGmtTimePostDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>59</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetNaviSrvcUUTIPs">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.SetNaviServiceUUTIPs.mm) (-CAP:)(Setting Navi Agent Service IPs for all UUTs in test.) (-FILE:)($dir_datalogs)($uutnum)(\SetNaviSrvcUUTIPs.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>60</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SyncICA">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\yncICA.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.Sync.mm) (-var0:)(ICA) (-uut:)(UUT)($uutnum) (-cap:)(Clearingng Sync for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>61</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="Copy.ICA.ICA.Conf">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.CopyICA.ConfFile.mm) (-VAR0:)(ICA) (-CAP:)(Retrieving ICA.Conf ICAs File UUT)($UutNum)) (-FILE:)($dir_datalogs)($uutnum)(\Copy.ICA.ICA.Conf.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>62</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ICA_RestartPoint">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="Multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.Delay.mm) (-cap:)(Delay UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\ICA_RestartPoint.txt) (-VAR0:)(2)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>63</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ValidateImage">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>Validate MCR mif file</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.ValidateImage.mm) (-cap:)(Validating Image Checksum )($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\ValidateImage.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>64</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ResetPwrCyclVar_PreICA">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_PreICA.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>65</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="MonPwrUp_PreICA_115200">
    <EstTime>00:40:00</EstTime>
    <TimeOut>00:59:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrCycleAllENCL_PreICA.txt) (-var0:)(UUT)($uutnum) (-var1:Boot) (-var2:AllXpeChas)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var2:)(SPA) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1A_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP1,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var2:)(SPB) (-baud )(115200) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpBE1B_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP2,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1A_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME1B_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2A_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME2B_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3A_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME3B_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPA) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4A_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var2:)(SPB) (-baud )($DMEBaudRt) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDME4B_PreICA.txt) (-saveraw)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>66</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="InitLAN">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.InitDialers.mm) (-FILE:)($dir_datalogs)($uutnum)(\InitLAN.txt) (-cap:)(Initializing )($uutnum)( LAN Vars) (-VAR0:)($uutnum) (-VAR1:)($ArgoTgtMap) (-var2:)($ArgoTgtMap_single_sps) (-VAR3:)(FC_Trident)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>67</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrDwnDMEsPreICA">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrDwnDMEsPreICA.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:AllDMEs)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>68</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ICA">
    <EstTime>00:30:00</EstTime>
    <TimeOut>02:00:00</TimeOut>
    <Description>Load ICA if needed without reboot switch</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.IcaApe.mm) (-cap:)(ICA BXP UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\ICA.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>69</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOff">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerCycle.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:AllXpeChas) (-Var4:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>70</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="LoadVaultPack_MSG">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Load the OS Vault Drives in the first 4 slots of the system in UUT)($uutnum)(.') (-Btn1:)(Vault Loaded/Pass) (-Btn2:)(Cancel/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\LoadVaultPack.MSG.txt) (-Style:Info) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>71</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrCycleBE_Flare">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrCycleBE_Flare.txt) (-var0:)(UUT)($uutnum) (-var2:)(DME)($uutnum) (-var1:Boot) (-var4:180)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>72</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CLB_LetOSBootUp">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:10:00</TimeOut>
    <Description>If Cabinet System then there is at least one SPS so wait for it to charge</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.Delay.mm) (-cap:)(Delay UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\LetOSBootUp.txt) (-VAR0:)(2400)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>73</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CLB_ArbSetTstIPs">
    <EstTime>00:00:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Description>If Cabinet System then there is at least one SPS so wait for it to charge</Description>
    <Exe Name="SyncUUTMod.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>(c:\tester\Controls\Synchronization\)</WorkingDir>
      <Arg>(-host:)(localhost) (-h) (-file:)($dir_datalogs)($uutnum)(\ArbSetTstIPs.txt) (-arb:)(SETIP) (-group:)($uutnum) (-name:'UUT)($uutnum)( IP Set Arbitration Lock')</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>74</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CLB_SetSysTstIPs">
    <EstTime>00:00:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Description>Get the CRU data and verify it</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.SetTestIPs.mm) (-cap:)(Set CLB IPs to test IPs)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SetSysTstIPs.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>75</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CLB_ReleaseIPArb">
    <EstTime>00:00:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Description>If Cabinet System then there is at least one SPS so wait for it to charge</Description>
    <Exe Name="SyncUUTMod.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>(c:\tester\Controls\Synchronization\)</WorkingDir>
      <Arg>(-host:)(localhost) (-h) (-file:)($dir_datalogs)($uutnum)(\ReleaseIPArb.txt) (-arb:)(SETIP) (-group:)($uutnum) (-name:'UUT)($uutnum)( IP Set Arbitration Lock') -unlock)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>76</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CLB_IpSetCompSync">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\IpSetCompSync.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.Sync.mm) (-var0:)(CLBIP) (-uut:)(UUT)($uutnum) (-cap:)(Clearing Sync for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>77</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="Wait4FlareGetAgent">
    <EstTime>01:50:00</EstTime>
    <TimeOut>02:30:15</TimeOut>
    <Description>Wait 90 mins for flare to build</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FlareInitializedMonitor.mm) (-cap:)(Monitoring Flare Availability UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\FlareInitializeMonitor.txt) (-VAR1:)(B) (-VAR2:)(GetAgent)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.MonitorICALoad.mm) (-var0:SPA) (-baud:)($AuxBaudRt) (-cap:)(UUT)($uutnum)( Monitor ICA Load SPA) (-file:)($dir_datalogs)($uutnum)(\MonitorICALoadSPA.txt)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.MonitorICALoad.mm) (-var0:SPB) (-baud:)($AuxBaudRt) (-cap:)(UUT)($uutnum)( Monitor ICA Load SPB) (-file:)($dir_datalogs)($uutnum)(\MonitorICALoadSPB.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>78</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckAgentA_Initial">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Description>get the agent and check the SN,Peer and the Flare rev allow retries</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckAgent.mm) (-cap:)(Checking Agent A UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckAgentA_Initial.txt) (-VAR1:)(A) (-VAR2:)(RETRY) (-VAR3:)(10) (-VAR4:)(180)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>79</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckAgentB_Initial">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>wait for Agent B to come up</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckAgent.mm) (-cap:)(Checking Agent B UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckAgentB_Initial.txt) (-VAR1:)(B) (-VAR2:)(RETRY) (-VAR3:)(10) (-VAR4:)(180)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>80</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SPSAReady">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Description>Check SP B Time</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.CheckSPS.mm) (-cap:)(Check SPSA Ready A )($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckSPS.txt) (-VAR1:)(A) (-VAR2:)(RETRY) (-VAR3:)(20) (-VAR4:180) (-VAR6:)(A)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>81</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="x8PortPersistChk">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Description>Check the x8 cabling</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.x8PortPersistChk.mm) (-cap:)(Verifying x8 Cables Installed UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\x8PortPersistChk.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>82</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetResumeA">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetResume.mm) (-cap:)(Get Resume A  UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\GetResumeA.txt) (-VAR1:)(A) (-VAR2:)(Check)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>83</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetCrusA">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCrus.mm) (-cap:)(Get Crus A UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckCrusA.txt) (-VAR1:)(A) (-VAR4:)($GetCrusVar4) (-VAR2:)(Check)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>84</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="WG_SetupScript">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.WG.SetupScript.mm) (-cap:)(WesternGeco Setup Script UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\WG_SetupScript.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>85</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="WG_RaidVerify">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.WG.RaidVerify.mm) (-cap:)(WesternGeco Raid Setup Verify UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\WG_RaidVerify.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>86</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SPSAReady_1">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Description>Check SP B Time</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.CheckSPS.mm) (-cap:)(Check SPSA Ready A )($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SPSAReady_1.txt) (-VAR1:)(A) (-VAR2:)(RETRY) (-VAR3:)(20) (-VAR4:900) (-VAR6:)(A)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>87</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ChkWrtCacheEnabled">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Description>Check SP B Time</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckWrtCacheEnable.mm) (-cap:)(Check Write Cache Settings )($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckWrtCacheEnable.txt) (-VAR1:)(A) (-VAR2:)(SetChkClear)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>88</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SaveSOData">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SaveSOData.mm) (-FILE:)($dir_datalogs)($uutnum)(\SaveSOData.txt) (-var1:Off) (-var2:AATECfgChk)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>89</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetFELogPorts">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.GetFELogPorts.mm) (-cap:)(Get FE Ports UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\GetFELogPorts.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>90</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VerifyFASTVP">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm.VerifyFASTVP.mm) (-cap:)(UUT)($uutnum)( Verify The FAST VP Enabler) (-FILE:)($dir_datalogs)($uutnum)(\VerifyFASTVP.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>91</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NDUBlockEnabler">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.NDUEnabler.mm) (-cap:)(NDU Block Enabler UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NDUBlockEnabler.txt) (-var0:)(BLOCK)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>92</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NDUFileOE">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.NDUEnabler.mm) (-cap:)(NDU File Enabler UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NDUFileOE.txt) (-var0:)(FILE_OE)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>93</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NDUFileEnabler">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.NDUEnabler.mm) (-cap:)(NDU File Enabler UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NDUFileEnabler.txt) (-var0:)(FILE)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>94</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckLogOneA1">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>Read he Navi Logs</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckLog.mm) (-cap:)(Check Logs UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NeoCheckLog.txt) (-VAR1:)(A) (-VAR2:)(SPAlog1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>95</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckLogOneB1">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>read the navi logs</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckLog.mm) (-cap:)(Check Logs UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NeoCheckLog.txt) (-VAR1:)(B) (-VAR2:)(SPBlog1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>96</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetHostAgentFiles1">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetHostAgentFiles.mm) (-VAR0:)(NAVIERR) (-VAR1:)(1) (-CAP:)(Retrieving Hostagent Files) (-FILE:)($dir_datalogs)($uutnum)(\GetHostAgentFiles1.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>97</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckLogClearAB_Final">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckLog.mm) (-cap:)(Check Logs UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CheckLogClearAB_Final.txt) (-VAR1:)(A) (-VAR2:)(ClearLog) (-VAR3:)(Clear) (-VAR4:)(Both)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>98</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetCBEncryption">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Description>Setting Controller Based Encryption</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.SetCBEncryption.mm) (-cap:)(Setting Controller Based Encryption)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SetCBEncryption.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>99</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ThorBinding">
    <EstTime>00:20:00</EstTime>
    <TimeOut>00:50:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.ThorConfig.mm) (-cap:)(Binding Thor System UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\ThorBinding.txt) (-var0:)($thorModel)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>100</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VNXFSetup">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Description>Setting Controller Based Encryption</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.VNXFSetup.mm) (-cap:)(Performing VNXF Setup)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\VNXFSetup.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>101</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ChkHostAgentBlockEOT">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetHostAgentFiles.mm) (-VAR0:)(NAVIERR) (-VAR1:)(FINAL) (-CAP:)(Retrieving Hostagent Files) (-FILE:)($dir_datalogs)($uutnum)(\ChkHostAgentBlockEOT.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>102</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="BackGndDisable">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Description>Get the CRU data and verify it</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.BackGndDisable.mm) (-cap:)(Disabling Background Drive Zeroing)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\BackGndDisable.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>103</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ResetIP">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Description>Get the CRU data and verify it</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.RetIp.mm) (-cap:)(Reset ip to defaults)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\RetIp.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>104</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FileVarsInit_Initial">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\FileVarsInit_Initial.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DartVariableInitialization.mm) (-uut:)($uutnum) (-VAR0:)(Argonaut) (-cap:)(UUT)($uutnum)( Dart Variable Init)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>105</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="EnableAA">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EnableAA.mm) (-cap:)(EnableAA UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\EnableAA.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>106</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FILE_WIRING_MSG">
    <EstTime>00:10:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="Multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.LanWiringMsg.mm) (-FILE:)($dir_datalogs)($uutnum)(\FILE_WIRING_MSG.txt) (-var0:)(UUT)($uutnum) (-var1:UnfDART)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>107</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FileRestartPointPrimary">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:16:00</TimeOut>
    <Description>Create a restart point</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.Delay.mm) (-cap:)(Delay UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\FileRestartPointPrimary.txt) (-VAR0:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>108</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCS_PreFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffPriCS_PreFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>109</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffSecCS_PreFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffSecCS_PreFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>110</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FileVarsInit_Retry">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\FileVarsInit_Retry.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DartVariableInitialization.mm) (-uut:)($uutnum) (-VAR0:)(Argonaut) (-cap:)(UUT)($uutnum)( Dart Variable Init)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>111</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCSDMEs_RestartPNP">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffPriCSDMEs_RestartPNP.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1DME)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>112</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffSecCS_RestartPNP">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffSecCS_RestartPNP.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>113</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SC.Off_RestartPNP">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SC.Off.PNPRestart.mm) (-cap:)(Set SC Off PNP Restart UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SC.Off_RestartPNP.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>114</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SG.Enable_RestartPNP">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SG.Enable.PNPRestart.mm) (-cap:)(Enable Storage Group PNP Restart UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SG.Enable_RestartPNP.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>115</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="UninstlFileEna_RestartPNP">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.NDUEnabler.mm) (-cap:)(NDU File Enabler UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\UninstlFileEna_RestartPNP.txt) (-var0:)(FILE) (-var1:)(UNINSTALL)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>116</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="AutoAttachEna_RestartPNP">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EnableAA.mm) (-cap:)(Set Auto Attach PNP Restart UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\AutoAttachEna_RestartPNP.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>117</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NDUFileOE_RestartPNP">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.NDUEnabler.mm) (-cap:)(NDU File Enabler UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\NDUFileOE_RestartPNP.txt) (-var0:)(FILE_OE)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>118</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCSDMEs">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffPriCSDMEs.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1DME)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>119</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetPrimary">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\SetPrimary.txt) (-uut:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SetPrimary.mm)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>120</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOnPriCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrPriCS.txt) (-var0:)(UUT)($uutnum) (-var1:On) (-var2:CS1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>121</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOnSecCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOnSecCS.txt) (-var0:)(UUT)($uutnum) (-var1:On) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>122</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PriSecLoadMessPNP">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Load the Dart Install DVD Rev. )($CStationVersion)( in BOTH the Primary/)($PrimaryTopOrBottom)( and Secondary/)($SecondaryTopOrBottom)( control stations.') (-Btn1:)(DVDs Loaded/Pass) (-Btn2:)(Cancel/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\PriSecLoadMessPNP.txt) (-Style:Info) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>123</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrPriCS.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>124</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffSecCS">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrPriCS.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>125</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PNPInstall">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:45:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrCycleCS1DMEs.txt) (-cap:)(UUT)($uutnum)( Power Cycling All DMEs) (-var0:)(UUT)($uutnum) (-var1:Boot) (-var2:AllDMEs)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComCS1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.CsIB.Pnp.mm) (-var0:DME) (-var4:0) (-cap:)(UUT)($uutnum)( PNP Primary Control Station Install) (-file:)($dir_datalogs)($uutnum)(\PnpControlInstallPrimary.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComCS2) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.CsIB.Pnp.mm) (-var0:DME) (-var4:1) (-cap:)(UUT)($uutnum)( PNP Secondary Control Station Install) (-file:)($dir_datalogs)($uutnum)(\PnpControlInstallSecondary.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPA) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME1A.txt)</Arg>
      <Condition>Equal($APP3,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME1B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPB) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME1 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME1B.txt)</Arg>
      <Condition>Equal($APP4,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPA) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME2A.txt)</Arg>
      <Condition>Equal($APP5,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME2B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPB) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME2 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME2B.txt)</Arg>
      <Condition>Equal($APP6,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPA) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME3A.txt)</Arg>
      <Condition>Equal($APP7,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME3B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPB) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME3 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME3B.txt)</Arg>
      <Condition>Equal($APP8,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4A) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPA) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPA) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME4A.txt)</Arg>
      <Condition>Equal($APP9,true)</Condition>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComDME4B) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:DME) (-var1:)(DMEDartMonitor) (-var2:)(SPB) (-var4:)(PNP) (-cap:)(UUT)($uutnum)( Monitor PwrUp DME4 SPB) (-file:)($dir_datalogs)($uutnum)(\PowerUpDartMonDME4B.txt)</Arg>
      <Condition>Equal($APP10,true)</Condition>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>126</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VerifyAADisabled">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EnableAA.mm) (-var0:VERIFYDISABLED) (-cap:)(Verify AA Disabled UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\VerifyAADisabled.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>127</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FibreCableChecks">
    <EstTime>01:00:00</EstTime>
    <TimeOut>01:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FibreCableCheck.mm) (-cap:)(Validate Fibre Cable Connections UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\FibreCableCheck.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>128</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetUBSEEnablers">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComCS1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SetUBSEEnablers.mm) (-var0:DME) (-cap:)(UUT)($uutnum)( Setting NAS UBSE Enablers) (-file:)($dir_datalogs)($uutnum)(\SetUBSEEnablers.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>129</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrimaryEnclosureStatus">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EnclosureStatus.mm) (-cap:)(UUT)($uutnum)( Primary CS EnclosureStatus) (-file:)($dir_datalogs)($uutnum)(\PrimaryEnclosureStatus.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>130</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="EncStatLoop">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EncStatLoop.mm) (-cap:)(UUT)($uutnum)( Primary CS EncStatLoop) (-file:)($dir_datalogs)($uutnum)(\EncStatLoop.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>131</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrimaryProbeSys">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ProbeSystem.mm) (-cap:)(UUT)($uutnum)( Primary CS ProbeSystem) (-file:)($dir_datalogs)($uutnum)(\PrimaryProbeSystem.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>132</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrimaryCheckCable">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCable.mm) (-cap:)(UUT)($uutnum)( Primary CS CheckCable) (-file:)($dir_datalogs)($uutnum)(\PrimaryCheckCable.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>133</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrimaryDmiDecode">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DmiDecode.mm) (-cap:)(UUT)($uutnum)( Primary CS DmiDecode) (-file:)($dir_datalogs)($uutnum)(\PrimaryDmiDecode.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>134</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SecondaryEnclosureStatus">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.EnclosureStatus.mm) (-var0:SECONDARY) (-cap:)(UUT)($uutnum)( Secondary CS EnclosureStatus) (-file:)($dir_datalogs)($uutnum)(\SecondaryEnclosureStatus.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>135</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SecondaryProbeSys">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ProbeSystem.mm) (-cap:)(UUT)($uutnum)( Secondary CS ProbeSystem) (-file:)($dir_datalogs)($uutnum)(\SecondaryProbeSystem.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>136</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SecondaryCheckCable">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCable.mm) (-cap:)(UUT)($uutnum)( Secondary CS CheckCable) (-file:)($dir_datalogs)($uutnum)(\SecondaryCheckCable.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>137</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SecondaryDmiDecode">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DmiDecode.mm) (-var0:SECONDARY) (-cap:)(UUT)($uutnum)( Secondary CS DmiDecode) (-file:)($dir_datalogs)($uutnum)(\SecondaryDmiDecode.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>138</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="StopEncLoop">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.Stop.EnclosureStatus.mm) (-cap:)(UUT)($uutnum)( Primary CS StopEncLoop) (-file:)($dir_datalogs)($uutnum)(\StopEncLoop.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>139</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CsMgmtIfup">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>Create a restart point</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.IfconfigCsMgmtPort.mm) (-cap:)(Delay UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CsMgmtIfup.txt) (-VAR1:)(IFUP_CSO) (-VAR2:)(192.168.10.120) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>140</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SaveNasInfo">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:20:00</TimeOut>
    <Description>Create a restart point</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SaveNasInfo.mm) (-cap:)(Delay UUT)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SaveNasInfo.txt) (-VAR0:)(192.168.10.120) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>141</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetCBEncryptionUnified">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Description>Setting Controller Based Encryption</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.SetCBEncryption.mm) (-var0:)(UNIFIED) (-cap:)(Setting Controller Based Encryption)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\SetCBEncryptionUnified.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>142</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmCopyToolsFile">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm.CopyToolsFile.mm) (-cap:)(UUT)($uutnum)(Copy the DLm Tools file to CS0) (-FILE:)($dir_datalogs)($uutnum)(\DLmCopyToolsFile.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>143</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmMgmtPortIfDown">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:16:00</TimeOut>
    <Description>Create a restart point</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm.MgmtPortIfDown.mm) (-cap:)(Reset Mgmt Port IP to Default )($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\CsMgmtIfDown.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>144</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmReconnectCableMsg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Disconnect the UUT2A LAN cable from the Mgmt port of CS0 and reconnect the yellow DLm lan cable.') (-Btn1:)(Cabled/Pass) (-Btn2:)(Not Cabled/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\DLm2KLanCableMsg.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>145</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmRemCableCheck_Sec">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComCS2) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\DLm.RemCableChk.mm) (-cap:)(UUT)($uutnum)( Remove Cable Check File from Secondary CS) (-FILE:)($dir_datalogs)($uutnum)(\DLmRemCableCheck_Sec.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>146</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmInitSetup">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm.InitSetup.mm) (-cap:)(UUT)($uutnum)(Initialize Variables for DLm Setup) (-FILE:)($dir_datalogs)($uutnum)(\DLmInitSetup.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>147</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmSetupScript">
    <EstTime>02:15:00</EstTime>
    <TimeOut>02:45:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComCS1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm.SetupScript.mm) (-cap:)(UUT)($uutnum)( Run the DLm Setup Script) (-FILE:)($dir_datalogs)($uutnum)(\DLmSetupScript.txt) (-baud 19200) (-handshake:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>148</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLmInitVTEC">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\DLmInitVTEC.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm.InitVTEC.mm) (-uut:)($uutnum) (-cap:DLm3 VTEC Init Variables) (-var1:)($TestLoc)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>149</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4OneVTECableMsg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Connect any available tester LAN cable to port eth2 on VTE1') (-Btn1:)(Cabled/Pass) (-Btn2:)(Not Cabled/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\VtecCableMs.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>150</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4TwoVTECableMsg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Connect any available tester LAN cables to ports eth2 and eth3 on both VTE1 and VTE2.') (-Btn1:)(Cabled/Pass) (-Btn2:)(Not Cabled/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\VtecCableMs.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>151</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE1PwrMsg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)(Power on VTE 1 by pressing the power button. Make sure the power LED comes on and that all other VTES are powered off.) (-Btn1:)(Only VTE1 On/Pass) (-Btn2:)(Not On/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\VTEPwrMsg.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>152</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE1DLm4MonitorPwrUp">
    <EstTime>01:40:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.MonitorVTE1PwrUp.mm) (-var0:)(1) (-var2:)(UpdateUtils) (-cap:)(Monitor Power Up on VTE1 ) (-file:)($dir_datalogs)($uutnum)(\MonitorVTE1PwrUp.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>153</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE1CopyFiles">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.DLm4.CopyFiles.mm) (-var1:)(Virtuent) (-cap:)(Transfer Virtuent and 1G Switch Config Files to VTE1 ) (-file:)($dir_datalogs)($uutnum)(\CopyFiles.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>154</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE1DLm4Config">
    <EstTime>01:40:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.VTE1Config.mm) (-var0:)(1) (-cap:)(Update Software and Configure VTE1 ) (-file:)($dir_datalogs)($uutnum)(\VTE1DLm4Config.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>155</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CheckFw1GSw1">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($Com1GSw1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm.SwitchFwChk.mm) (-var1:)(1) (-var2:)(AT) (-cap:)(UUT)($uutnum)( Check Firmware Rev on 1G Switch 1) (-file:)($dir_datalogs)($uutnum)(\CheckFw_1GSw1.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>156</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CfgFileDLm4Load1GSw1">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm.SwitchFileLoad.mm) (-var1:)(1) (-var2:)(At) (-cap:)(UUT)($uutnum)( Upload Config Files from VTE1 to 1G Sw1 ) (-file:)($dir_datalogs)($uutnum)(\CfgFileLoad_1GSw1.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>157</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SetCfg1GSw1">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($Com1GSw1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm.SwitchSetCfg.mm) (-var1:)(1) (-var2:)(AT) (-cap:)(UUT)($uutnum)( Set the DLm3 Configuration on 1G Switch 1) (-file:)($dir_datalogs)($uutnum)(\SetCfg_1GSw1.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>158</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE2PwrMsg">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)(Power on VTE2 by pressing the power button. Make sure the power LED comes on.) (-Btn1:)(VTE2 On/Pass) (-Btn2:)(Not On/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\VTEPwrMsg.txt) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(5) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>159</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="VTE2DLm4SwInit">
    <EstTime>01:40:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.VTEInit.mm) (-var0:)(2) (-cap:)(DLm4 Software Init on VTE2 ) (-file:)($dir_datalogs)($uutnum)(\VTE2SwInit.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>160</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4ChangeFcId">
    <EstTime>01:20:00</EstTime>
    <TimeOut>01:20:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.ChangeFcId.mm) (-var0:)(8) (-var2:)(Config) (-cap:)(Change The FC IDs) (-file:)($dir_datalogs)($uutnum)(\ChangeFcIdDLm4.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>161</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4HaStatus">
    <EstTime>00:10:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.HaStatus.mm) (-var0:)(2) (-cap:)(DLm4 Make Sure VTE2 is Secondary ) (-file:)($dir_datalogs)($uutnum)(\VTE2HaStatus.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>162</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4FinalTest">
    <EstTime>00:50:00</EstTime>
    <TimeOut>01:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.FinalTest.mm) (-var1:)(1) (-cap:)(Final Test DLm4 ) (-file:)($dir_datalogs)($uutnum)(\FinalTestDLm4.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>163</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="DLm4ShutdownVTEs">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($ComVTE1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm4.ShutdownVTEs.mm) (-var1:)(1) (-cap:)(Shutdown the VTEs) (-file:)($dir_datalogs)($uutnum)(\ShutdownVTEs.txt) (-baud:)(115200) (-handshake:)(1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>164</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOff1GSw1">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.DLm.SwitchPwrOff.mm) (-var1:)(1) (-var2:)(AT) (-cap:)(UUT)($uutnum)( Power Off the 1G Switch) (-file:)($dir_datalogs)($uutnum)(\PwrOff_1GSw1.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>165</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ChkHostAgentUnifEOT">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetHostAgentFiles.mm) (-VAR0:)(NAVIERR) (-VAR1:)(FINAL) (-CAP:)(Retrieving Hostagent Files) (-FILE:)($dir_datalogs)($uutnum)(\ChkHostAgentUnifEOT.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>166</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="NasHalt">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.NasHalt.mm) (-cap:)(UUT)($uutnum)( Halt the Nas Services) (-file:)($dir_datalogs)($uutnum)(\NasHalt.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>167</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="BackGndDisable">
    <EstTime>00:25:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Description>Get the CRU data and verify it</Description>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.BackGndDisable.mm) (-cap:)(Disabling Background Drive Zeroing)($uutnum) (-FILE:)($dir_datalogs)($uutnum)(\BackGndDisable.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>168</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCS_AfterFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffPriCS_AfterFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>169</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffSecCS_AfterFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffSecCS_AfterFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS2)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>170</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOff_AfterFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOff_AfterFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:AllXpeChas) (-Var4:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>171</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetGenealogy_SOData">
    <EstTime>00:02:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-uut:)($uutnum) (-file:)($dir_datalogs)($uutnum)(\GetGenealogy_SOData.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.GetGenealogy.mm) (-var0:)($SysTLA)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>172</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="SaveSODataGene">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.SaveSOData.mm) (-FILE:)($dir_datalogs)($uutnum)(\SaveSODataGene.txt) (-var1:Off) (-var2:AATECfgChk) (-var3:GeneOnly)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>173</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOffPriCSDMEs_AfterFileInstall">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PwrOffPriCSDMEs_AfterFileInstall.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:CS1DME)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>174</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="CSPwrReCblMsg">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('After Power Off is Complete, Connect Control Station Power Cables to the PDUs. Connect CS0 to the LEFT PDU/PDP Rail (B Side Power). Connect CS1 to the RIGHT PDU/PDP Rail (A Side Power). Turn OFF ALL SPS Switches. Continue when ready to proceed.') (-Btn1:)(Continue/Pass) (-Btn2:)(Cancel/Pass) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\CSPowerCableChk.txt) (-Style:Info) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>175</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="TurnUUTBPwrOff">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="UniversalPowerMod.exe">
      <WorkingDirType>Variable</WorkingDirType>
      <WorkingDir>dir_upc</WorkingDir>
      <Arg>(-file:)($dir_datalogs)($uutnum)(\TurnUUTBPwrOff.txt) (-uut:)($uutnum) (-ports:UUT)($uutnum)(B) (-cmd:off) (-host:)(localhost) (-h)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>176</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="RstPwrCyclVar_CS0Chk">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_PreICA.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>177</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrBChkCS0on1off">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOnB.txt) (-var0:)(UUT)($uutnum) (-var1:On) (-var2:BSide)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCSOutput.mm) (-var0:on) (-cap:)(UUT)($uutnum)( Verify CS0 is powered up) (-file:)($dir_datalogs)($uutnum)(\ChkCS0on1off1.txt) (-baud:19200)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCSOutput.mm) (-var0:off) (-cap:)(UUT)($uutnum)( Verify CS1 is NOT powered up) (-file:)($dir_datalogs)($uutnum)(\ChkCS0on1off2.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>178</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrDwnBSide">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOffB.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:BSide) (-Var4:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>179</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="TurnUUTAPwrOff">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="UniversalPowerMod.exe">
      <WorkingDirType>Variable</WorkingDirType>
      <WorkingDir>dir_upc</WorkingDir>
      <Arg>(-file:)($dir_datalogs)($uutnum)(\TurnUUTAPwrOff.txt) (-uut:)($uutnum) (-ports:UUT)($uutnum)(A) (-cmd:off) (-host:)(localhost) (-h)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>180</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="RstPwrCyclVar_CS1Chk">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:05:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_PreICA.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>181</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrAChkCS1on0off">
    <EstTime>00:15:00</EstTime>
    <TimeOut>00:30:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOnA.txt) (-var0:)(UUT)($uutnum) (-var1:On) (-var2:ASide)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS1) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCSOutput.mm) (-var0:off) (-cap:)(UUT)($uutnum)( Verify CS0 is NOTpowered up) (-file:)($dir_datalogs)($uutnum)(\ChkCS1on0off1.txt) (-baud:19200)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-UUT:)(UUT)($uutnum) ($ComCS2) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.CheckCSOutput.mm) (-var0:on) (-cap:)(UUT)($uutnum)( Verify CS1 is powered up) (-file:)($dir_datalogs)($uutnum)(\ChkCS1on0off2.txt) (-baud:19200)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>182</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrDwnASide">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerOffA.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:ASide) (-Var4:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>183</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrintCSLabel">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PrintLabel.mm) (-FILE:)($dir_datalogs)($uutnum)(\PrintLabel.txt) (-var0:)(UUT)($uutnum) (-var1:FoxgloveGateway)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>184</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetCSLabelMsg">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Label has been printed. Please attach.') (-Btn1:)(Label is Attached/Pass) (-Btn2:)(Cancel/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\GetCSLabelMsg.txt) (-Style:Info) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>185</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PrintLoosePairLabel">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:'C:\Tester\Controls\ConsoleRedirector\ConsoleProxy.exe -target:cmd.exe -host:localhost') (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PrintVaultAndSPELabel.mm) (-FILE:)($dir_datalogs)($uutnum)(\PrintLoosePairLabel.txt) (-var0:)(UUT)($uutnum) (-var1:FoxgloveGateway)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>186</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="GetLoosePairLabelMsg">
    <EstTime>00:01:30</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="MSG.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-msg:)('Label has been printed. Please attach.') (-Btn1:)(Label is Attached/Pass) (-Btn2:)(Cancel/Fail) (-hide:)(Btn2) (-file:)($dir_datalogs)($uutnum)(\GetLoosePairLabelMsg.txt) (-Style:Info) (-validate) (-uut:)($uutnum) (-color:5) (-pos:)(6) (-nodb)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>187</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ResetPwrCyclVar_EndOfTest">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.ResetPwrCycleVar.mm) (-FILE:)($dir_datalogs)($uutnum)(\ResetPwrCyclVar_DMEResumeChk.txt) (-var0:)(UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>188</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="MonPwrUpAllENCL_ClrDMI_EndOfTest">
    <EstTime>00:30:00</EstTime>
    <TimeOut>00:45:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\MonPwrUpAllENCL_ClrDMI_EndOfTestPwr.txt) (-var0:)(UUT)($uutnum) (-var2:)(DME)($uutnum) (-var1:Boot)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($coma1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPA) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPA) (-file:)($dir_datalogs)($uutnum)(\MonPwrUpAllENCL_ClrDMI_EndOfTestA.txt)</Arg>
    </Exe>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) ($comb1) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.PwUpMonitor.mm) (-var0:AUX) (-var1:ClrDMI) (-var2:)(SPB) (-cap:)(UUT)($uutnum)( Monitor PwrUp BE1 SPB) (-file:)($dir_datalogs)($uutnum)(\MonPwrUpAllENCL_ClrDMI_EndOfTestB.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>false</boolean>
  <boolean>false</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>189</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="PwrOff">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:15:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.FC.PowerControl.mm) (-cap:)(UUT)($uutnum)( Power Cycling System) (-FILE:)($dir_datalogs)($uutnum)(\PowerCycle.txt) (-var0:)(UUT)($uutnum) (-var1:Off) (-var2:AllXpeChas) (-Var4:1)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>190</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="Check4OpenIncid_Final">
    <EstTime>00:05:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="CheckOpenIssuesModule.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-uutNum:)($uutnum) (-checkIL:)(true)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>191</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ClnUpHostAgntFilesEOT">
    <EstTime>00:01:00</EstTime>
    <TimeOut>00:00:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Rok.GetHostAgentFiles.mm) (-VAR0:)(NAVIERR) (-VAR1:)(EOT) (-CAP:)(Cleaning Up Leftover Hostagent Files) (-FILE:)($dir_datalogs)($uutnum)(\ClnUpHostAgntFilesEOT.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>192</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ClearSyncData">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:05:30</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ClearSyncData.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.Sync.mm) (-var0:)(CLR) (-uut:)(UUT)($uutnum) (-cap:)(Clearingng Sync for UUT)($uutnum)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>193</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="ClearUutIdConfigs">
    <EstTime>00:03:00</EstTime>
    <TimeOut>00:10:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-app:cmd.exe) (-h) (-file:)($dir_datalogs)($uutnum)(\ClearUutIdConfigs.txt) (-SCR:)($JO_UutWorkingDirectory)(\modules\Roc.SetUutIdConfigs.mm) (-uut:)($uutnum) (-var0:CLEAR) (-cap:Clear UUT Reg Settings)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer>
  <int>194</int>
  <int>0</int>
  <long>-9223372036854775808</long>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <dateTime>0001-01-01T00:00:00</dateTime>
  <TestExecStatus>Ready</TestExecStatus>
  <TestStep Name="FCMAT_Rockies_Rev_50">
    <EstTime>00:00:45</EstTime>
    <TimeOut>00:03:00</TimeOut>
    <Exe Name="multimon.exe">
      <WorkingDirType>Argument</WorkingDirType>
      <WorkingDir>($JO_UutWorkingDirectory)(\bin)</WorkingDir>
      <Arg>(-h) (-app:)(cmd.exe) (-UUT:)(UUT)($uutnum) (-SCR:)($JO_UutWorkingDirectory)(\modules\Unf.TestCompletion.mm) (-CAP:)(Delay) (-FILE:)($dir_datalogs)($uutnum)(\delay.txt)</Arg>
    </Exe>
  </TestStep>
  <boolean>true</boolean>
  <boolean>true</boolean>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.StepRunningStatus-Emc.Mfg.Library.Sequencer></List><ExecutionBlockStack><ArrayOfInt xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><int>13</int><int>0</int></ArrayOfInt><ExecutionBlockTable><List><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer>
  <int>1</int>
  <int>194</int>
  <ControlStructureType>Empty</ControlStructureType>
  <string />
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>4</int>
  <int>4</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($TestLoc,CLB)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>7</int>
  <int>7</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($Gateway,Yes)),Or(Equal($CabType,Cab),Equal($CabType,VirtualCab)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>7</int>
  <int>7</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($MySystemType,Jetfire))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>8</int>
  <int>9</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($TestLoc,CM)),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>11</int>
  <int>11</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($TestLoc,CM)),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>12</int>
  <int>12</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($x8Cable,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>16</int>
  <int>18</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($FileOnly,true),Equal($Unified,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>17</int>
  <int>18</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($CabType,Loose))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>29</int>
  <int>31</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($NumOfDAEs,0))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>29</int>
  <int>29</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($x8Cable,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>32</int>
  <int>32</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($DEFcon,1))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>33</int>
  <int>33</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($DEFcon,1))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>36</int>
  <int>37</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($DEFcon,1))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>38</int>
  <int>38</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($DMCount,0)),Not(Equal($DEFcon,1)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>39</int>
  <int>39</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($DEFcon,1))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>40</int>
  <int>40</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($Gateway,Yes))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>41</int>
  <int>41</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($TestLoc,CM)),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>43</int>
  <int>46</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($TestLoc,CM)),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>48</int>
  <int>48</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(And(Equal($AutoNestActive,TRUE),Not(Equal($TestLoc,CM))),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>59</int>
  <int>59</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($uutnum,1)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>62</int>
  <int>103</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Or(Equal($Unified,true),Equal($BlockOnly,true)),And(Equal($FileOnly,true),Not(Equal($Gateway,Yes))))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer>
  <int>62</int>
  <int>103</int>
  <ControlStructureType>Empty</ControlStructureType>
  <string />
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>64</int>
  <int>65</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($ICAComplete,TRUE)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>67</int>
  <int>77</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($TESTRUNMODE,AWC))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>67</int>
  <int>67</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($BlockOnly,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>68</int>
  <int>68</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($TestLoc,CLB))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>69</int>
  <int>76</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($TestLoc,CLB)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>77</int>
  <int>77</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($TestLoc,CLB))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>80</int>
  <int>80</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($DCPower,false),Or(Equal($CabType,Cab),Equal($CabType,VirtualCab)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>81</int>
  <int>81</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($x8Cable,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>84</int>
  <int>85</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($TESTRUNMODE,WesternGeco)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>86</int>
  <int>86</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($DCPower,false),Or(Equal($CabType,Cab),Equal($CabType,VirtualCab)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>88</int>
  <int>88</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Not(Equal($FileOnlyLoose,true)),Not(Equal($TestLoc,CM))))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>89</int>
  <int>89</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($FileOnly,true),Equal($Unified,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>90</int>
  <int>90</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($DLmType,DLm7600),Equal($DLmType,DLm5400))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>91</int>
  <int>91</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($Enabler,Unified),Equal($Enabler,Block))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>92</int>
  <int>92</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($FILEOE,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>93</int>
  <int>93</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($Enabler,Unified),Equal($Enabler,File))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>96</int>
  <int>96</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($ROCKIES,TRUE)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>98</int>
  <int>98</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($CBEDARE,true),Equal($BlockOnly,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>99</int>
  <int>99</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($THOR,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>100</int>
  <int>100</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($VNXF,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>101</int>
  <int>102</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($BlockOnly,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>103</int>
  <int>103</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($TestLoc,CLB),And(Not(Equal($FileOnly,true)),Not(Equal($Unified,true))))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>104</int>
  <int>184</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($FileOnly,true),Equal($Unified,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer>
  <int>104</int>
  <int>184</int>
  <ControlStructureType>Empty</ControlStructureType>
  <string />
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemScript-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>105</int>
  <int>105</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($Gateway,Yes))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>110</int>
  <int>117</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($PrimaryInstalled,True),Not(Equal($Gateway,Yes)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>127</int>
  <int>127</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($Gateway,Yes))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>134</int>
  <int>137</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($numCS,2),Not(Equal($BTUTest,TRUE)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>139</int>
  <int>167</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($Gateway,Yes))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>141</int>
  <int>141</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($CBEDARE,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>142</int>
  <int>147</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($IsDLm,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>144</int>
  <int>144</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($IsDLm,true),Equal($DLmType,DLm2100V))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>148</int>
  <int>164</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($IsDLm,true),Equal($DLmType,DLm2100V))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>149</int>
  <int>149</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($DLmType,DLm2100V),Equal($RunVTE2,false))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>150</int>
  <int>150</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($DLmType,DLm2100V),Equal($RunVTE2,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>151</int>
  <int>157</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($IsDLm,true),Equal($DLmType,DLm2100V))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>158</int>
  <int>159</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($DLmType,DLm2100V),Equal($RunVTE2,true))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>160</int>
  <int>164</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($IsDLm,true),Equal($DLmType,DLm2100V))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>171</int>
  <int>172</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Not(Equal($TestLoc,CM)),Not(Equal($TestLoc,CLB)))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>174</int>
  <int>174</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($CabType,Cab)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>175</int>
  <int>178</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($CabType,Cab),Equal($numCS,2))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>179</int>
  <int>182</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>And(Equal($CabType,Cab),Equal($numCS,2))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>185</int>
  <int>186</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Or(Equal($THORFIELD,true),And(Equal($LoosePair,True),Not(Equal($TestLoc,CM))))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>185</int>
  <int>186</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($TestLoc,CLB))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>186</int>
  <int>186</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Not(Equal($NumLabelsPrinted,ZERO))</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer><Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer>
  <int>187</int>
  <int>188</int>
  <ControlStructureType>Conditional</ControlStructureType>
  <string>Equal($MachineCheckRework,true)</string>
</Emc.Mfg.Library.Sequencer.Sequencer.RunContext.ExecutionBlockItemCondition-Emc.Mfg.Library.Sequencer></List><int>13</int></ExecutionBlockTable></ExecutionBlockStack><int>35</int><boolean>false</boolean></RunContext><ScriptManager><boolean>true</boolean><string>Rockies_FC.xml</string><dateTime>2015-10-30T14:14:03.3125+00:00</dateTime></ScriptManager><ScriptEventRegistry><ArrayOfPairOfScriptEventTypeScriptEvent xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><PairOfScriptEventTypeScriptEvent><ScriptEventType>OnStop</ScriptEventType><ScriptEvent Type="OnStop" UutNum="1"><ExeHandler Type="Executable"><Exe Name="OnStop.bat"><WorkingDirType>Argument</WorkingDirType><WorkingDir>(C:\EMC\ProductPackages\992-920-439\bin\)</WorkingDir><Arg>(1)</Arg></Exe></ExeHandler></ScriptEvent></PairOfScriptEventTypeScriptEvent><PairOfScriptEventTypeScriptEvent><ScriptEventType>OnError</ScriptEventType><ScriptEvent Type="OnError" UutNum="1"><ExeHandler Type="Executable"><Exe Name="OnStop.bat"><WorkingDirType>Argument</WorkingDirType><WorkingDir>(C:\EMC\ProductPackages\992-920-439\bin\)</WorkingDir><Arg>(1)</Arg></Exe></ExeHandler></ScriptEvent></PairOfScriptEventTypeScriptEvent></ArrayOfPairOfScriptEventTypeScriptEvent></ScriptEventRegistry><VariableManager><ArrayOfPairOfSeqStringVariable xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><PairOfSeqStringVariable><SeqString>JO_UutWorkingDirectory</SeqString><Variable><SeqString>JO_UutWorkingDirectory</SeqString><boolean>false</boolean><string>c:\EMC\ProductPackages\992-920-439</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_datalogs</SeqString><Variable><SeqString>dir_datalogs</SeqString><boolean>false</boolean><string>c:\datalogs\uut</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>uutnum</SeqString><Variable><SeqString>uutnum</SeqString><boolean>false</boolean><string>1</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>login_location</SeqString><Variable><SeqString>login_location</SeqString><boolean>false</boolean><string>Login_Location</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TestLoc</SeqString><Variable><SeqString>TestLoc</SeqString><boolean>false</boolean><string>CORK</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>jo_so_number</SeqString><Variable><SeqString>jo_so_number</SeqString><boolean>false</boolean><string>30730570</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>Gateway</SeqString><Variable><SeqString>Gateway</SeqString><boolean>false</boolean><string>No</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>CabType</SeqString><Variable><SeqString>CabType</SeqString><boolean>false</boolean><string>Loose</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>MySystemType</SeqString><Variable><SeqString>MySystemType</SeqString><boolean>false</boolean><string>Jetfire</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>SysTLA</SeqString><Variable><SeqString>SysTLA</SeqString><boolean>false</boolean><string>CKM00154400369</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TLAPN</SeqString><Variable><SeqString>TLAPN</SeqString><boolean>false</boolean><string>900-566-030</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>psnt</SeqString><Variable><SeqString>psnt</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>x8Cable</SeqString><Variable><SeqString>x8Cable</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_Defcon_Level</SeqString><Variable><SeqString>TPC_Defcon_Level</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>FileOnly</SeqString><Variable><SeqString>FileOnly</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>Unified</SeqString><Variable><SeqString>Unified</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP1</SeqString><Variable><SeqString>APP1</SeqString><boolean>false</boolean><string>true</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>coma1</SeqString><Variable><SeqString>coma1</SeqString><boolean>false</boolean><string>-COM:3</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP2</SeqString><Variable><SeqString>APP2</SeqString><boolean>false</boolean><string>true</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>comb1</SeqString><Variable><SeqString>comb1</SeqString><boolean>false</boolean><string>-COM:4</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP3</SeqString><Variable><SeqString>APP3</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME1A</SeqString><Variable><SeqString>ComDME1A</SeqString><boolean>false</boolean><string>-COM:7</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DMEBaudRt</SeqString><Variable><SeqString>DMEBaudRt</SeqString><boolean>false</boolean><string>9600</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP4</SeqString><Variable><SeqString>APP4</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME1B</SeqString><Variable><SeqString>ComDME1B</SeqString><boolean>false</boolean><string>-COM:8</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP5</SeqString><Variable><SeqString>APP5</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME2A</SeqString><Variable><SeqString>ComDME2A</SeqString><boolean>false</boolean><string>-COM:9</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP6</SeqString><Variable><SeqString>APP6</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME2B</SeqString><Variable><SeqString>ComDME2B</SeqString><boolean>false</boolean><string>-COM:10</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP7</SeqString><Variable><SeqString>APP7</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME3A</SeqString><Variable><SeqString>ComDME3A</SeqString><boolean>false</boolean><string>-COM:11</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP8</SeqString><Variable><SeqString>APP8</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME3B</SeqString><Variable><SeqString>ComDME3B</SeqString><boolean>false</boolean><string>-COM:12</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP9</SeqString><Variable><SeqString>APP9</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME4A</SeqString><Variable><SeqString>ComDME4A</SeqString><boolean>false</boolean><string>-COM:13</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>APP10</SeqString><Variable><SeqString>APP10</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComDME4B</SeqString><Variable><SeqString>ComDME4B</SeqString><boolean>false</boolean><string>-COM:14</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AuxBaudRt</SeqString><Variable><SeqString>AuxBaudRt</SeqString><boolean>false</boolean><string>115200</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AuxChassisID</SeqString><Variable><SeqString>AuxChassisID</SeqString><boolean>false</boolean><string>1</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>NumOfDAEs</SeqString><Variable><SeqString>NumOfDAEs</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>pluginfilename</SeqString><Variable><SeqString>pluginfilename</SeqString><boolean>false</boolean><string>platypusplugin.dll</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>sequencefilename</SeqString><Variable><SeqString>sequencefilename</SeqString><boolean>false</boolean><string>GATE_Rockies_Argonaut_Jetfire.xml</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DEFcon</SeqString><Variable><SeqString>DEFcon</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>GATEModel</SeqString><Variable><SeqString>GATEModel</SeqString><boolean>false</boolean><string>Jetfire</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DMCount</SeqString><Variable><SeqString>DMCount</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AutoNestActive</SeqString><Variable><SeqString>AutoNestActive</SeqString><boolean>false</boolean><string>FALSE</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ReturnEnclIDVar</SeqString><Variable><SeqString>ReturnEnclIDVar</SeqString><boolean>false</boolean><string>ReturnEnclID_Clarrion</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>gstasequencefilename</SeqString><Variable><SeqString>gstasequencefilename</SeqString><boolean>false</boolean><string>GSTARockiesTestSequenceFC.xml</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>UutNum)</SeqString><Variable><SeqString>UutNum)</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>BlockOnly</SeqString><Variable><SeqString>BlockOnly</SeqString><boolean>false</boolean><string>true</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ICAComplete</SeqString><Variable><SeqString>ICAComplete</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ArgoTgtMap</SeqString><Variable><SeqString>ArgoTgtMap</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ArgoTgtMap_single_sps</SeqString><Variable><SeqString>ArgoTgtMap_single_sps</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TESTRUNMODE</SeqString><Variable><SeqString>TESTRUNMODE</SeqString><boolean>false</boolean><string>Normal</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DCPower</SeqString><Variable><SeqString>DCPower</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>GetCrusVar4</SeqString><Variable><SeqString>GetCrusVar4</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>FileOnlyLoose</SeqString><Variable><SeqString>FileOnlyLoose</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DLmType</SeqString><Variable><SeqString>DLmType</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>Enabler</SeqString><Variable><SeqString>Enabler</SeqString><boolean>false</boolean><string>Block</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>FILEOE</SeqString><Variable><SeqString>FILEOE</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ROCKIES</SeqString><Variable><SeqString>ROCKIES</SeqString><boolean>false</boolean><string>TRUE</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>CBEDARE</SeqString><Variable><SeqString>CBEDARE</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>THOR</SeqString><Variable><SeqString>THOR</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>thorModel</SeqString><Variable><SeqString>thorModel</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>VNXF</SeqString><Variable><SeqString>VNXF</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>PrimaryInstalled</SeqString><Variable><SeqString>PrimaryInstalled</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>CStationVersion</SeqString><Variable><SeqString>CStationVersion</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>PrimaryTopOrBottom</SeqString><Variable><SeqString>PrimaryTopOrBottom</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>SecondaryTopOrBottom</SeqString><Variable><SeqString>SecondaryTopOrBottom</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComCS1</SeqString><Variable><SeqString>ComCS1</SeqString><boolean>false</boolean><string>-COM:5</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComCS2</SeqString><Variable><SeqString>ComCS2</SeqString><boolean>false</boolean><string>-COM:6</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>numCS</SeqString><Variable><SeqString>numCS</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>BTUTest</SeqString><Variable><SeqString>BTUTest</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>IsDLm</SeqString><Variable><SeqString>IsDLm</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>RunVTE2</SeqString><Variable><SeqString>RunVTE2</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ComVTE1</SeqString><Variable><SeqString>ComVTE1</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>Com1GSw1</SeqString><Variable><SeqString>Com1GSw1</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_upc</SeqString><Variable><SeqString>dir_upc</SeqString><boolean>false</boolean><string>C:\Tester\Controls\UPC\</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>THORFIELD</SeqString><Variable><SeqString>THORFIELD</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>LoosePair</SeqString><Variable><SeqString>LoosePair</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>NumLabelsPrinted</SeqString><Variable><SeqString>NumLabelsPrinted</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>MachineCheckRework</SeqString><Variable><SeqString>MachineCheckRework</SeqString><boolean>false</boolean></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_modules</SeqString><Variable><SeqString>dir_modules</SeqString><boolean>false</boolean><string>\modules\</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_ape_ini</SeqString><Variable><SeqString>dir_ape_ini</SeqString><boolean>false</boolean><string>\bin\ape.ini</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_bin</SeqString><Variable><SeqString>dir_bin</SeqString><boolean>false</boolean><string>\bin\</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>rabbitornps</SeqString><Variable><SeqString>rabbitornps</SeqString><boolean>false</boolean><string>Rabbit</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>dir_sync</SeqString><Variable><SeqString>dir_sync</SeqString><boolean>false</boolean><string>\Controls\Synchronization\</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>databasepath</SeqString><Variable><SeqString>databasepath</SeqString><boolean>false</boolean><string>C:\Datalogs\UUT</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>databasefile</SeqString><Variable><SeqString>databasefile</SeqString><boolean>false</boolean><string>UUT</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>FirmwareUpdated</SeqString><Variable><SeqString>FirmwareUpdated</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>targetmap_switch</SeqString><Variable><SeqString>targetmap_switch</SeqString><boolean>false</boolean><string>00000003</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>JO_Plant</SeqString><Variable><SeqString>JO_Plant</SeqString><boolean>false</boolean><string>EMI</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>JO_Product</SeqString><Variable><SeqString>JO_Product</SeqString><boolean>false</boolean><string>ROC</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>JO_TestArea</SeqString><Variable><SeqString>JO_TestArea</SeqString><boolean>false</boolean><string>FC</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_Defcon_Enabled</SeqString><Variable><SeqString>TPC_Defcon_Enabled</SeqString><boolean>false</boolean><string>True</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_NonLinear_Enabled</SeqString><Variable><SeqString>TPC_NonLinear_Enabled</SeqString><boolean>false</boolean><string>False</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_NonLinear_Temperature</SeqString><Variable><SeqString>TPC_NonLinear_Temperature</SeqString><boolean>false</boolean><string>notused</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_NonLinear_Voltage</SeqString><Variable><SeqString>TPC_NonLinear_Voltage</SeqString><boolean>false</boolean><string>notused</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_NonLinear_Vibration</SeqString><Variable><SeqString>TPC_NonLinear_Vibration</SeqString><boolean>false</boolean><string>notused</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>TPC_NonLinear_Duration</SeqString><Variable><SeqString>TPC_NonLinear_Duration</SeqString><boolean>false</boolean><string>notused</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>$AutoNestActive</SeqString><Variable><SeqString>$AutoNestActive</SeqString><boolean>false</boolean><string>FALSE</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>ConfigCheckModel</SeqString><Variable><SeqString>ConfigCheckModel</SeqString><boolean>false</boolean><string>JET</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>NasSpType</SeqString><Variable><SeqString>NasSpType</SeqString><boolean>false</boolean><string>ARG</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>INFO_SO0</SeqString><Variable><SeqString>INFO_SO0</SeqString><boolean>false</boolean><string>30730570</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>Multi_XPE_NUM</SeqString><Variable><SeqString>Multi_XPE_NUM</SeqString><boolean>false</boolean><string>1</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>specialcase</SeqString><Variable><SeqString>specialcase</SeqString><boolean>false</boolean><string> </string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>SPSPresent</SeqString><Variable><SeqString>SPSPresent</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>SanSpType</SeqString><Variable><SeqString>SanSpType</SeqString><boolean>false</boolean><string>JET</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>LooseChassisTest</SeqString><Variable><SeqString>LooseChassisTest</SeqString><boolean>false</boolean><string>true</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>LooseDPE</SeqString><Variable><SeqString>LooseDPE</SeqString><boolean>false</boolean><string>true</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_PRESENT</SeqString><Variable><SeqString>AUX_PRESENT</SeqString><boolean>false</boolean><string>1</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>LooseGateway</SeqString><Variable><SeqString>LooseGateway</SeqString><boolean>false</boolean><string>false</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DME0_PRESENT</SeqString><Variable><SeqString>DME0_PRESENT</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DME1_PRESENT</SeqString><Variable><SeqString>DME1_PRESENT</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DME2_PRESENT</SeqString><Variable><SeqString>DME2_PRESENT</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>DME3_PRESENT</SeqString><Variable><SeqString>DME3_PRESENT</SeqString><boolean>false</boolean><string>0</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>coma2</SeqString><Variable><SeqString>coma2</SeqString><boolean>false</boolean><string>-COM:5</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>comb2</SeqString><Variable><SeqString>comb2</SeqString><boolean>false</boolean><string>-COM:6</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_B_MAC_RAW_FORMAT</SeqString><Variable><SeqString>AUX_B_MAC_RAW_FORMAT</SeqString><boolean>false</boolean><string>00:60:16:79:0E:54</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_B_MAC_DASH_FORMAT</SeqString><Variable><SeqString>AUX_B_MAC_DASH_FORMAT</SeqString><boolean>false</boolean><string>00-60-16-79-0E-54</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_A_MAC_RAW_FORMAT</SeqString><Variable><SeqString>AUX_A_MAC_RAW_FORMAT</SeqString><boolean>false</boolean><string>00:60:16:78:E9:00</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_B_MAC_COLON_FORMAT</SeqString><Variable><SeqString>AUX_B_MAC_COLON_FORMAT</SeqString><boolean>false</boolean><string>00:60:16:79:0E:54</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_A_MAC_DASH_FORMAT</SeqString><Variable><SeqString>AUX_A_MAC_DASH_FORMAT</SeqString><boolean>false</boolean><string>00-60-16-78-E9-00</string></Variable></PairOfSeqStringVariable><PairOfSeqStringVariable><SeqString>AUX_A_MAC_COLON_FORMAT</SeqString><Variable><SeqString>AUX_A_MAC_COLON_FORMAT</SeqString><boolean>false</boolean><string>00:60:16:78:E9:00</string></Variable></PairOfSeqStringVariable></ArrayOfPairOfSeqStringVariable></VariableManager><ScriptEventRunnerWrap><boolean>false</boolean><boolean>false</boolean></ScriptEventRunnerWrap></UUTState>
